name: Perform a code review when a comment is added on Pull Request

on:
  issue_comment:
    types: [created, edited]

jobs:
  codex:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/codex review')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      final_message: ${{ steps.run_codex.outputs.final-message }}
    steps:
      - name: Checkout PR merge commit
        uses: actions/checkout@v5
        with:
          ref: refs/pull/${{ github.event.issue.number }}/merge

      - name: Fetch PR details
        id: pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number
            });
            return pr.data;

      - name: Pre-fetch base and head refs for the PR
        run: |
          git fetch --no-tags origin \
            ${{ fromJson(steps.pr.outputs.result).base.ref }} \
            +refs/pull/${{ github.event.issue.number }}/head

      # You can install dependencies here if Codex needs to build or test code.
      # Example:
      # - run: npm install

      - name: Run Codex
        id: run_codex
        uses: openai/codex-action@v1
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          prompt: |
            This is PR #${{ github.event.issue.number }} for ${{ github.repository }}.
            Base SHA: ${{ fromJson(steps.pr.outputs.result).base.sha }}
            Head SHA: ${{ fromJson(steps.pr.outputs.result).head.sha }}

            Review ONLY the changes introduced by the PR.
            If you need context, you can look at related functions or code snippets.
            Suggest improvements, potential bugs, or issues.
            Be concise, constructive, and specific in your feedback.

            Pull request title and body:
            ----
            ${{ fromJson(steps.pr.outputs.result).title }}
            ${{ fromJson(steps.pr.outputs.result).body }}

  post_feedback:
    runs-on: ubuntu-latest
    needs: codex
    if: needs.codex.outputs.final_message != ''
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Report Codex feedback
        uses: actions/github-script@v7
        env:
          CODEX_FINAL_MESSAGE: ${{ needs.codex.outputs.final_message }}
        with:
          github-token: ${{ github.token }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: process.env.CODEX_FINAL_MESSAGE,
            });
